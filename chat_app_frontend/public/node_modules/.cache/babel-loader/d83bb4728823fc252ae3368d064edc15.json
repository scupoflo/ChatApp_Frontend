{"ast":null,"code":"import _classCallCheck from \"/Users/uniqueshinik/Development/React/ChatApp_Frontend/chat_app_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/uniqueshinik/Development/React/ChatApp_Frontend/chat_app_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/uniqueshinik/Development/React/ChatApp_Frontend/chat_app_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/uniqueshinik/Development/React/ChatApp_Frontend/chat_app_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/uniqueshinik/Development/React/ChatApp_Frontend/chat_app_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/uniqueshinik/Development/React/ChatApp_Frontend/chat_app_frontend/src/containers/conversationList.js\";\nimport React, { Component } from 'react';\nimport Conversation from '../components/conversation';\nvar API = \"http://localhost:3000/conversations\";\n\nvar ConversationList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ConversationList, _Component);\n\n  function ConversationList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ConversationList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ConversationList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      conversations: []\n    };\n\n    _this.fetchConversation = function () {\n      fetch(API).then(function (res) {\n        return res.JSON();\n      }).then(function (data) {\n        _this.setState({\n          conversations: data\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ConversationList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchConversation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        id: \"myForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Conversation, {\n        conversationList: this.state.conversations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ConversationList;\n}(Component);\n\nexport default ConversationList;","map":{"version":3,"sources":["/Users/uniqueshinik/Development/React/ChatApp_Frontend/chat_app_frontend/src/containers/conversationList.js"],"names":["React","Component","Conversation","API","ConversationList","state","conversations","fetchConversation","fetch","then","res","JSON","data","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,IAAMC,GAAG,GAAG,qCAAZ;;IACMC,gB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,aAAa,EAAE;AADT,K;;UAQRC,iB,GAAoB,YAAM;AACtBC,MAAAA,KAAK,CAACL,GAAD,CAAL,CACCM,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAECF,IAFD,CAEM,UAAAG,IAAI,EAAI;AACZ,cAAKC,QAAL,CAAc;AACZP,UAAAA,aAAa,EAAEM;AADH,SAAd;AAGD,OAND;AAOD,K;;;;;;;wCAZgB;AACjB,WAAKL,iBAAL;AACD;;;6BAYU;AACN,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,EAAE,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,gBAAgB,EAAE,KAAKF,KAAL,CAAWC,aAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAOD;;;;EA3ByBL,S;;AA+B/B,eAAeG,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport Conversation from '../components/conversation'\n\nconst API = \"http://localhost:3000/conversations\"\nclass ConversationList extends Component {\n  state = {\n    conversations: []\n  }\n\n  componentDidMount(){\n    this.fetchConversation()\n  }\n\n  fetchConversation = () => {\n      fetch(API)\n      .then(res => res.JSON())\n      .then(data => {\n        this.setState({\n          conversations: data\n        })\n      })\n    }\n\n    render() {\n       return (\n         <div className=\"app\" id=\"myForm\">\n           <Conversation\n             conversationList={this.state.conversations}\n           />\n         </div>\n       );\n     }\n\n}\n\nexport default ConversationList;\n"]},"metadata":{},"sourceType":"module"}